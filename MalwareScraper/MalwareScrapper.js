const { execSync } = require('child_process');

const queryCMD = `curl -d "query=get_file_type&file_type=exe&limit=7" -X POST https://mb-api.abuse.ch/api/v1`


const scrape = () => {

  let queryResp 
  
  queryResp = execSync(queryCMD, (err, stdout, stderr) => {
    if (err) {
      //some err occurred
      console.error(err)
    } else {
     // the *entire* stdout and stderr (buffered)
     console.log(`stdout: ${stdout}`);
     console.log(`stderr: ${stderr}`);
    }
  });
  console.log(JSON.parse(queryResp.toString()))
  
  
  let exeData = JSON.parse(queryResp.toString())
  setTimeout(pushToGitHub, 8000)
  exeData.data.forEach((exe) => {
      let downloadQuery = `curl -d "query=get_file&sha256_hash=${exe.sha256_hash}" -X POST https://mb-api.abuse.ch/api/v1/ --output ./scraped/${exe.file_name}`
      console.log(exe.tags)
      if(exe.tags.includes("32")){
          execSync(downloadQuery, (err, stdout, stderr) => {
              if (err) {
                //some err occurred
                console.error(err)
              } else {
               // the *entire* stdout and stderr (buffered)
               console.log(`stdout: ${stdout}`);
               console.log(`stderr: ${stderr}`);
              }
            });
      }
      else{
          console.log('Not a 32 bit file')
      }
  })
}


const pushToGitHub = () => {
  let git = "git add ."
  let message = `git commit -m 'Mawlware updated: ${Date.now()}'`
  let push = `git push`
  let msg1 = execSync(git)
  console.log(msg1)
  let msg2 = execSync(message)
  console.log(msg2)
  let msg3 = execSync(push)
  console.log(msg3)


}

setInterval(scrape, 10000)

// pushToGitHub()

